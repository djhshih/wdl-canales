task counts_create_read_count_panel_of_normals {
    input {
      String pon_entity_id
      Array[File] read_count_files
      Float? minimum_interval_median_percentile
      Float? maximum_zeros_in_sample_percentage
      Float? maximum_zeros_in_interval_percentage
      Float? extreme_sample_median_percentile
      Boolean? do_impute_zeros
      Float? extreme_outlier_truncation_percentile
      Int? number_of_eigensamples
      Int? maximum_chunk_size
      File? annotated_intervals   #do not perform explicit GC correction by default
      File? gatk4_jar_override

      # Runtime parameters
      String gatk_docker
      Int? mem_gb
      Int? disk_space_gb
      Boolean use_ssd = false
      Int? cpu
      Int? preemptible_attempts
    }

    Int machine_mem_mb = select_first([mem_gb, 7]) * 1000
    Int command_mem_mb = machine_mem_mb - 500

    command <<<
        set -e
        export GATK_LOCAL_JAR=~{default="/root/gatk.jar" gatk4_jar_override}

        gatk --java-options "-Xmx~{command_mem_mb}m -XX:+UseSerialGC" CreateReadCountPanelOfNormals \
            --input ~{sep=" --input " read_count_files} \
            --minimum-interval-median-percentile ~{default="10.0" minimum_interval_median_percentile} \
            --maximum-zeros-in-sample-percentage ~{default="5.0" maximum_zeros_in_sample_percentage} \
            --maximum-zeros-in-interval-percentage ~{default="5.0" maximum_zeros_in_interval_percentage} \
            --extreme-sample-median-percentile ~{default="2.5" extreme_sample_median_percentile} \
            --do-impute-zeros ~{default="true" do_impute_zeros} \
            --extreme-outlier-truncation-percentile ~{default="0.1" extreme_outlier_truncation_percentile} \
            --number-of-eigensamples ~{default="20" number_of_eigensamples} \
            --maximum-chunk-size ~{default="16777216" maximum_chunk_size} \
            ~{"--annotated-intervals " + annotated_intervals} \
            --output ~{pon_entity_id}.pon.hdf5
    >>>

    runtime {
        docker: "~{gatk_docker}"
        memory: machine_mem_mb + " MB"
        disks: "local-disk " + select_first([disk_space_gb, 150]) + if use_ssd then " SSD" else " HDD"
        cpu: select_first([cpu, 1])
        preemptible: select_first([preemptible_attempts, 2])
    }

    output {
        File read_count_pon = "~{pon_entity_id}.pon.hdf5"
    }
}


